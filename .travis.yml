sudo: required
language: python
jdk: openjdk8
services: docker
python: '3.6'
cache: pip
matrix:
  fast_finish: true

before_install:
  # PRs to master are only ok if coming from dev branch
  - '[ $TRAVIS_PULL_REQUEST = "false" ] || [ $TRAVIS_BRANCH != "master" ] || ([ $TRAVIS_PULL_REQUEST_SLUG = $TRAVIS_REPO_SLUG ] && [ $TRAVIS_PULL_REQUEST_BRANCH = "dev" ])'
  # Pull the docker image first so the test doesn't wait for this
  - docker pull nfcore/sarek:dev
  # Fake the tag locally so that the pipeline runs properly
  # Looks weird when this is :dev to :dev, but makes sense when testing code for a release (:dev to :1.0.1)
  - docker tag nfcore/sarek:dev nfcore/sarek:dev

install:
  # Install Nextflow
  - mkdir /tmp/nextflow && cd /tmp/nextflow
  - wget -qO- get.nextflow.io | bash
  - sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
  # Install nf-core/tools
  - pip install --upgrade pip
  - pip install nf-core
  # Reset
  - mkdir ${TRAVIS_BUILD_DIR}/tests && cd ${TRAVIS_BUILD_DIR}/tests

env:
  - NXF_VER=19.04.0

jobs:
  include:
    - stage: lint
      script: nf-core lint ${TRAVIS_BUILD_DIR}
    - stage: built
      script: skip
      script: git clone --single-branch --branch sarek https://github.com/nf-core/test-datasets.git test-data
      script: nextflow run ${TRAVIS_BUILD_DIR}/build.nf -profile docker --genome smallGRCh37 --refdir test-data/reference --outdir References
    - stage: test
      script: nextflow run ${TRAVIS_BUILD_DIR}/main.nf -profile docker --help
