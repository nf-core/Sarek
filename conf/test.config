/*
========================================================================================
    Nextflow config file for running minimal tests
========================================================================================
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/sarek -profile test,<extra_test_profile>,<docker/singularity>

----------------------------------------------------------------------------------------
*/

params {

    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '8.h'

    // Input data
    input = "${baseDir}/tests/csv/3.0/fastq_single.csv"

    // Small reference genome
    igenomes_ignore   = true
    genome            = 'small_hg38'
    genomes_base      = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules'

    dbsnp                   = "${params.genomes_base}/data/genomics/homo_sapiens/genome/vcf/dbsnp_146.hg38.vcf.gz"
    fasta                   = "${params.genomes_base}/data/genomics/homo_sapiens/genome/genome.fasta"
    germline_resource       = "${params.genomes_base}/data/genomics/homo_sapiens/genome/vcf/gnomAD.r2.1.1.vcf.gz"
    intervals               = "${params.genomes_base}/data/genomics/homo_sapiens/genome/genome.interval_list"
    known_indels            = "${params.genomes_base}/data/genomics/homo_sapiens/genome/vcf/mills_and_1000G.indels.vcf.gz"
    nucleotides_per_second  = 20

    snpeff_db         = 'WBcel235.99'
    vep_species       = 'caenorhabditis_elegans'
    vep_cache_version = '104'

    // Ignore `--input` as otherwise the parameter validation will throw an error
    schema_ignore_params = 'genomes,input'
}

profiles {
    annotation {
        params.genome              = 'WBcel235'
        params.igenomes_ignore     = false
        params.input               = 'https://raw.githubusercontent.com/nf-core/test-datasets/sarek/testdata/csv/tiny-vcf-https.csv'
        params.step                = 'annotate'
    }
    pair {
        params.input               = "${baseDir}/tests/csv/3.0/fastq_pair.csv"
    }
    prepare_recalibration {
        params.input               = "${baseDir}/tests/csv/3.0/mapped_single.csv"
        params.step                = 'prepare_recalibration'
    }
    save_bam_mapped {
        params.save_bam_mapped     = true
    }
    skip_markduplicates {
        params.skip_markduplicates = true
    }
    split_fastq {
        params.split_fastq         = 150000
        params.save_split_fastqs   = true
    }
    no_intervals {
        params.no_intervals          = true
    }
    targeted {
        params.intervals           = "${params.genomes_base}/data/genomics/homo_sapiens/genome/multi_intervals.bed"
        params.wes                 = true
    }
    tools {
        params.input               = "${baseDir}/tests/csv/3.0/recalibrated.csv"
        params.dbsnp               = "${params.genomes_base}/data/genomics/homo_sapiens/genome/chr21/germlineresources/dbsnp_138.hg38.vcf.gz"
        params.fasta               = "${params.genomes_base}/data/genomics/homo_sapiens/genome/chr21/sequence/genome.fasta"
        params.germline_resource   = "${params.genomes_base}/data/genomics/homo_sapiens/genome/chr21/germlineresources/gnomAD.r2.1.1.vcf.gz"
        params.intervals           = "${params.genomes_base}/data/genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed"
        params.pon                 = "${params.genomes_base}/data/genomics/homo_sapiens/genome/chr21/germlineresources/mills_and_1000G.indels.hg38.vcf.gz"
        params.step                = 'variant_calling'
        params.tools               = 'deepvariant,freebayes,haplotypecaller,manta,msisensorpro,mutect2,strelka,snpeff,vep' //tiddit
        params.joint_germline      = true
        params.wes                 = true
        params.genome              = 'WBcel235'
        params.vep_genome          = 'WBcel235'
        //params.vep_cache           =
    }
    trimming {
        params.clip_r1             = 1
        params.clip_r2             = 1
        params.three_prime_clip_r1 = 1
        params.three_prime_clip_r2 = 1
        params.trim_fastq          = true
    }
    use_gatk_spark {
        params.use_gatk_spark      = 'bqsr,markduplicates'
    }
    umi {
        params.input               = "${baseDir}/tests/csv/3.0/fastq_umi.csv"
        params.umi_read_structure  = '7M1S+T'
    }
}

//This is apparently useless as it won't overwrite things in the modules.config
process {
    withName:SNPEFF {
        maxForks = 1
    }
    withName:ENSEMBLVEP {
        maxForks = 1
    }
}
