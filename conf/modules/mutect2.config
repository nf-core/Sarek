/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// MUTECT2

process {
    if (params.tools && params.tools.split(',').contains('mutect2')) {
        withName: 'GATK4_CALCULATECONTAMINATION' {
            ext.prefix       = { "${meta.id}.mutect2" }
            ext.args         = { "-tumor-segmentation ${meta.id}.mutect2.segmentation.table" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/mutect2/" },
                saveAs: { params.joint_mutect2 ? "${meta.patient}/${it}" : "${meta.id}/${it}"}
            ]
        }

        withName: 'GATK4_FILTERMUTECTCALLS' {
            ext.prefix       = {"${meta.id}.mutect2.filtered"}
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/" },
                saveAs: { "mutect2/${meta.id}/${it}" }
            ]
        }

        withName: 'GATK4_GATHERPILEUPSUMMARIES.*' {
            ext.prefix       = { "${meta.id}.mutect2" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/mutect2/${meta.id}/" }
            ]
        }

        withName: 'GATK4_GETPILEUPSUMMARIES.*' {
            ext.prefix       = { meta.num_intervals <= 1 ? "${meta.id}.mutect2" : "${meta.id}.mutect2.${intervals.simpleName}" }
            publishDir        = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/" },
                pattern: "*.table",
                saveAs: { meta.num_intervals > 1 ? null : "mutect2/${meta.id}/${it}" }
            ]
        }

        withName: 'GATK4_LEARNREADORIENTATIONMODEL' {
            ext.prefix       = { "${meta.id}.mutect2.artifactprior" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/mutect2/${meta.id}/" }
            ]
        }

        withName: 'GATK4_MERGEMUTECTSTATS' {
            ext.prefix       = { "${meta.id}.mutect2" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/mutect2/${meta.id}/" }
            ]
        }

        withName: '.*BAM_VARIANT_CALLING_.*_MUTECT2:GATK4_MERGEVCFS' {
            ext.prefix       = { "${meta.id}.mutect2" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/mutect2/${meta.id}" },
                pattern: "*{vcf.gz,vcf.gz.tbi}"
            ]
        }

        withName: 'GATK4_MUTECT2' {
            ext.args         = { [
                "--f1r2-tar-gz ${task.ext.prefix}.f1r2.tar.gz --normal-sample ${meta.patient}_${meta.normal_id}",
                params.ignore_soft_clipped_bases ? "--dont-use-soft-clipped-bases true" : ""
            ].join(' ').trim() }
            ext.prefix       = { meta.num_intervals <= 1 ? "${meta.id}.mutect2" : "${meta.id}.mutect2.${intervals.simpleName}" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variant_calling/" },
                pattern: "*{vcf.gz,vcf.gz.tbi,stats}",
                saveAs: { meta.num_intervals > 1 ? null : "mutect2/${meta.id}/${it}" }
            ]
        }

        withName: 'NFCORE_SAREK:SAREK:BAM_VARIANT_CALLING_TUMOR_ONLY_ALL:BAM_VARIANT_CALLING_TUMOR_ONLY_MUTECT2:GATK4_MUTECT2' {
            ext.args         = { [
                "--f1r2-tar-gz ${task.ext.prefix}.f1r2.tar.gz",
                params.ignore_soft_clipped_bases ? "--dont-use-soft-clipped-bases true" : ""
            ].join(' ').trim() }
        }
    }
}
